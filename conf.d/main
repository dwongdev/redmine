#!/bin/bash -ex

ADMIN_PASS=turnkey
API_KEY=$(mcookie)

SRC=/usr/local/src
WEBROOT=/var/www/redmine

# needed for git-http
a2enmod cgi

DB_PASS=$(grep 'password:' $WEBROOT/config/database.yml | head -1 | sed 's/ *//g' | cut -d':' -f2)

# start mysql
systemctl start mariadb

# remove adminer user - redmine doesn't have adminer
mariadb_admin_pass=$(mcookie)$(mcookie)
mysql -e "DROP USER IF EXISTS adminer;"
mysql -e "GRANT ALL PRIVILEGES ON *.* TO mariadb_admin@localhost IDENTIFIED BY '$mariadb_admin_pass';"
mysql -e "FLUSH PRIVILEGES;"

#  configure webmin specific db user - updated in firstboot script
#  this should probably be move to common - for use in all apps that doesn't have adminer
conf=/etc/webmin/mysql/config
# 'login' should exist in webmin conf
sed -i "\|^login=|s|=.*|=mariadb_admin|" $conf
# 'pass' shouldn't exist in webmin conf, but just in case it does
if grep -q '^pass=' $conf; then
    sed -i "\|^pass=|s|=.*|=$mariadb_admin_pass|" $conf
else
    echo "pass=$mariadb_admin_pass" >> $conf
fi

# install redmine and configure it
tar -zxf $SRC/redmine-*.tar.gz -C $(dirname $WEBROOT)
rm -rf $SRC/redmine-*.tar.gz

mv $WEBROOT $WEBROOT.orig
mv $(dirname $WEBROOT)/redmine-* $WEBROOT
cp $WEBROOT.orig/config/database.yml $WEBROOT/config/database.yml
rm -rf $WEBROOT.orig

CONF=$WEBROOT/db/migrate/001_setup.rb
SHA1_PASS=$(echo -n $ADMIN_PASS | sha1sum | cut -d " " -f 1)
sed -i "s/:hashed_password \(.*\)/:hashed_password => \"$SHA1_PASS\",/" $CONF

[[ "$FAB_HTTP_PROXY" ]] && export http_proxy=$FAB_HTTP_PROXY

cd $WEBROOT
bundle config set --local without 'test development'
bundle install

for i in test development production; do
    mysql -e "DROP DATABASE IF EXISTS redmine_$i;"
    mysql -e "CREATE DATABASE redmine_$i DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;"
done

bundle exec rake generate_secret_token
bundle exec rake db:migrate RAILS_ENV="production"
REDMINE_LANG=en bundle exec rake redmine:load_default_data RAILS_ENV="production"
unset http_proxy

# requirement for reposman.rb
gem install --no-document activeresource

project_init() {
    echo "Running 'project_init $1 $2 $3 $4'."
    mysql <<EOF
USE redmine_production;
INSERT projects (id, name, is_public, created_on, updated_on, identifier, status, lft, rgt)
VALUES ($1, '$2-helloworld', '1', '2012-01-01 13:00:00', '2012-01-01 13:00:00', '$2-helloworld', '1', '1', '2');
EOF

    mysql <<EOF
USE redmine_production;
INSERT repositories (id, project_id, url, root_url, type, path_encoding, log_encoding, identifier, is_default)
VALUES ($1, '$1', '$4', '$4', '$3', 'UTF-8', 'UTF-8', '$2-helloworld', '1');
EOF

    names="issue_tracking time_tracking news documents files wiki repository boards"
    for name in $names; do
        mysql <<EOF
USE redmine_production;
INSERT enabled_modules (id, project_id, name) VALUES (NULL, '$1', '$name');
EOF
    done

    for tracker_id in 1 2 3; do
        echo "id = '$tracker_id'"
        mysql <<EOF
USE redmine_production;
INSERT projects_trackers (project_id, tracker_id) VALUES ('$1', '$tracker_id');
EOF
    done
}

# configure projects and repositories
project_init 1 git Repository::Git        /srv/repos/git/helloworld/.git
project_init 2 svn Repository::Subversion file:///srv/repos/svn/helloworld

# create welcome message and init settings
mysql <<EOF
USE redmine_production;
INSERT settings (name, value) VALUES
('welcome_text', '# Getting started

* Sign into Redmine (top right) start managing your projects
  - Username: **admin**
  - Use the password that was _set at firstboot_
* [TurnKey Linux Redmine appliance release notes](https://www.turnkeylinux.org/redmine)
* Redmine resources
  - [Guide](https://www.redmine.org/guide)
  - [Forums](https://www.redmine.org/projects/redmine/boards)
  - [FAQ](https://www.redmine.org/wiki/redmine/FAQ)
'),
('enabled_scm', '---\n- Subversion\n- Git\n'),
('sys_api_enabled', '1'),
('sys_api_key', '$API_KEY');
EOF

# disable requirement to reset admin password on 1st login (pass set on firstboot)
MYSQL_BATCH="mysql --batch --database redmine_production --execute"
TIMESTAMP=$($MYSQL_BATCH "SELECT created_on FROM users WHERE id=1;" | tail -1)
$MYSQL_BATCH "UPDATE users SET must_change_passwd = 0 WHERE id=1;"
$MYSQL_BATCH "UPDATE users SET passwd_changed_on = \"$TIMESTAMP\" WHERE id=1;"

# secure API key
echo $API_KEY >> $WEBROOT/api_key
chmod 600 $WEBROOT/api_key

a2enconf redmine_secure
a2enconf redmine_webaccess

# configure outgoing email
cat >$WEBROOT/config/configuration.yml<<EOF
production:
  email_delivery:
    delivery_method: :sendmail
    smtp_settings:
      address: 127.0.0.1
      port: 25
EOF

# turnkey-credit (passenger substitute x2 bug)
cat >>$WEBROOT/public/stylesheets/application.css<<EOF
#turnkey-credit {
    font-family: Tahoma,Sans,Arial,Helvetica,Verdana,sans-serif;
    font-size: 11px;
    text-align: center;
    padding-top: 5px;
}
#turnkey-credit a {
    text-decoration: none;
}
#turnkey-credit a:hover {
    text-decoration: underline;
}
EOF

TURNKEY_CREDIT="<div id='turnkey-credit'> <div> <a href='https://www.turnkeylinux.org/redmine'>Redmine Appliance</a> - Powered by <a href='https://www.turnkeylinux.org'>TurnKey Linux</a> </div> </div>"

FOOTER=$WEBROOT/app/views/layouts/base.html.erb
sed -i "s|</body>|$TURNKEY_CREDIT\n</body>|" $FOOTER

# setup logs for rotation
rm -r $WEBROOT/log
ln -s /var/log/redmine/ $WEBROOT/log

# configure permissions
chown -R root:www-data $WEBROOT
chown -R www-data:www-data $WEBROOT/tmp
chown -R www-data:www-data /var/log/redmine/
chown -R www-data:www-data $WEBROOT/files

mkdir -p $WEBROOT/public/plugin_assets
chown -R www-data:www-data $WEBROOT/public/plugin_assets

# stop mysql
systemctl stop mariadb
